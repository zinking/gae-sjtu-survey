<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml" width="350" height="400"
	xmlns:effects="org.efflex.*"
	 initialize="init()"
>
	 
<!--	 <effects:FlipPapervision3D id="flipPapervision3D"
        duration="200" constrain="false" direction="up"
        popUp="false" modal="false"
        modalTransparency="0.5" modalTransparencyColor="0xFFFFFF"
        modalTransparencyBlur="0" modalTransparencyDuration="0"/>-->
        
<mx:Script>
	<![CDATA[
		import mx.events.ValidationResultEvent;
		import mx.controls.RadioButton;
		import net.isurvey.model.*;
		import util.Localizator; 
		
		public static const QUESTION_MODIFIED:String ="question_modified";
		
		public 	var  questiondata:QuestionData 		= new QuestionData();	
		public 	var isValidQuestion:Boolean 		= false;
		private var isValidQuestionHeader:Boolean 	= false;
		
		[Bindable] 
		private var localizator : Localizator = Localizator.getInstance();
		   
		public function init():void{
			rdBox.removeAllChildren();
			renderQuestionData( questiondata );
		}
		
		public function renderQuestionData( questiondata:QuestionData ):void{
			txtQuestionDescription.text = questiondata.description  ;
			rdBox.removeAllChildren();
			for each ( var item:Object in questiondata.optionlist ){
				var rdOption:OptionRender = new OptionRender();
				rdOption.text = item.description;
				rdOption.addEventListener( OptionRender.OPTION_DELETED ,onDelOption);
				rdOption.addEventListener( OptionRender.OPTION_MODIFIED,onEditOption);
				rdBox.addChild( rdOption );
			}
			isValidQuestion = true;						
		}
		
		public function getQuestionData():QuestionData{
			questiondata.description = txtQuestionDescription.text;
			questiondata.optionlist.removeAll();
			for each ( var item:OptionRender in rdBox.getChildren() ){
				var optionitem:Object = new Object();
				optionitem.optionname = item.getText();
				optionitem.pollcount = 0;
				questiondata.optionlist.addItem( optionitem );
			}						
			return questiondata;
		}

		private function onAddOption( event:Event):void{
			if ( !checkValidOption( txtOptionDescription.text ) ){
				btnAddOption.enabled = false ;
				return;
			}
			
			var rdOption:OptionRender = new OptionRender();
			rdOption.text = txtOptionDescription.text;
			rdOption.addEventListener( OptionRender.OPTION_DELETED ,onDelOption);
			rdOption.addEventListener( OptionRender.OPTION_MODIFIED,onEditOption);
			rdBox.addChild( rdOption );
			
			
			validateQuestion(event);
			dispatchEvent( new Event( QUESTION_MODIFIED ));
			
			txtOptionDescription.text = "";
			btnAddOption.enabled = false;
		}
		
		private function onEditOption( event:Event ):void{
			validateQuestion(event);
			dispatchEvent( new Event( QUESTION_MODIFIED ));
		}
		
		private function onDelOption( event:Event):void{
			rdBox.removeChild( event.target as OptionRender );
			validateQuestion(event);
			dispatchEvent( new Event( QUESTION_MODIFIED ));
		}	

		//////////////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////////////			
		
		private function validateQuestionHeader( ):Boolean{
			var pdvr:ValidationResultEvent = vdProblemDescription.validate();
			var odvr:ValidationResultEvent = vdOptionDescription.validate();
			
			btnAddOption.enabled = ( odvr.type == ValidationResultEvent.VALID );
			return  ( pdvr.type == ValidationResultEvent.VALID ) ; 
		}
			
		
		private function validateOptionList(  ):Boolean{											
				if ( rdBox.getChildren().length < 2 ) {
					rdBox.errorString = localizator.getText('create_module_es_twooption');
					return false;
				}
				else{//假设所有选项刚刚添加的时候都是正确的，修改的时候会有相应的判断
					for each( var item:OptionRender in rdBox.getChildren() ){
						if ( !item.isValidOption ) return false; 
					}
					rdBox.errorString = "";
					return true;
				}			
		}
		
		private function validateQuestion( event:Event ):void{
			var isValidHeader:Boolean 		= validateQuestionHeader();
			var isValidOptionList:Boolean 	= validateOptionList();
			isValidQuestion = isValidHeader && isValidOptionList;
		}
		
		private function checkValidOption( option_des:String ):Boolean{
			for each( var item:OptionRender in rdBox.getChildren() ){
				if ( item.text == option_des ) return false; 
			}
			return true;
		}
		
		//////////////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////////////
		//////////////////////////////////////////////////////////////////////////////////////////////			
		

		
		private function onQuestionTextChange( event:Event ):void{
			
			//VALIDATE QUESTION QUESTION DESCRIPTION
			//VALIDATE QUESTION OPTION
			label = txtQuestionDescription.text;
			
			
			//if( ! checkValidOption( txtOptionDescription.text )
			
			validateQuestion( event );
			dispatchEvent( new Event(QUESTION_MODIFIED));
		}
		
		
	]]>
</mx:Script>


	<mx:StringValidator id="vdProblemDescription"  source="{txtQuestionDescription}" property="text"
		maxLength="{SurveyModelLocator.max_description_length}" 
		minLength="{SurveyModelLocator.min_descritpion_length}"
		tooLongError="{localizator.getText('manage_module_b_long')}"
		 tooShortError="{localizator.getText('manage_module_b_short')}"
		 requiredFieldError="{localizator.getText('login_module_b_rfe')}"/>
	<mx:StringValidator id="vdOptionDescription"  source="{txtOptionDescription}" property="text"
		maxLength="{SurveyModelLocator.max_description_length}" 
		minLength="{SurveyModelLocator.min_descritpion_length}"
		tooLongError="{localizator.getText('manage_module_b_long')}"
		tooShortError="{localizator.getText('manage_module_b_short')}"
		requiredFieldError="{localizator.getText('login_module_b_rfe')}"/>
	<mx:StringValidator />
	<mx:VDividedBox width="95%" height="95%" left="10" top="10" verticalGap="10" liveDragging="false">
   		<mx:Form height="194" width="100%" >
   			<mx:FormHeading 
   				label="{localizator.getText('create_module_es_filloption')}"
   				width="100%" textAlign="center" height="22" fontWeight="normal" textDecoration="normal"/>
   			<mx:FormItem 
   				label="{localizator.getText('create_module_es_questiondescription')}" 
   				width="100%" height="68">
   				<mx:TextArea   
   					id="txtQuestionDescription" width="100%" height="100%"
					change="onQuestionTextChange(event)"/>
   			</mx:FormItem>

		
			<mx:FormItem 
				label="{localizator.getText('create_module_es_typeofquestion')}" 
				width="100%" fontSize="14" horizontalAlign="left" required="true">
				<mx:HBox height="100%" width="100%">
					<mx:Spacer width="10%"/>
					<mx:RadioButton  label="{localizator.getText('create_module_es_single')}" selected="true"/>
					<mx:RadioButton  label="{localizator.getText('create_module_es_multiple')}" enabled="false"/>
				</mx:HBox>
			</mx:FormItem>
		
			<mx:FormItem 
				label="{localizator.getText('create_module_es_optiondescription')}" 
				width="100%" fontSize="14" horizontalAlign="left" required="true">
			<mx:HBox>
				<mx:TextInput 
					id="txtOptionDescription" width="90%"
					change="onQuestionTextChange(event)"/>
				<mx:Button 
					id="btnAddOption" width="10%"
					label="{localizator.getText('create_module_es_addoption')}"  enabled="false"
				click="onAddOption(event)"/>
			</mx:HBox>
				
			</mx:FormItem>
		</mx:Form>
	
		<mx:Canvas label="Label" height="171" width="100%">			
			
			<mx:VBox id="rdBox" 
				width="100%" height="100%" horizontalAlign="center" 
				verticalAlign="middle" enabled="true" visible="true">
				<mx:RadioButton label="Radio1"/>
				<mx:RadioButton label="Radio2"/>	
			</mx:VBox>
			<mx:Button 
				label="{localizator.getText('create_module_es_confirmation')}" 
				x="262" y="127" enabled="false"  visible="false"
				click="onQuestionTextChange(event)"/>
		</mx:Canvas>
	</mx:VDividedBox>
	
	
</mx:Canvas>
