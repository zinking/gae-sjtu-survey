<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:Render="component.SurveyUI.Render.*"
	xmlns:effects="org.efflex.*"
	xmlns:viewStackEffects="org.efflex.viewStackEffects.*"
	creationComplete="init()" 
	width="400" height="300"
	backgroundColor="#A4F7FA" backgroundAlpha="0.22">
	
	<effects:FlipPapervision3D id="flipPapervision3D"/>
<!--   <viewStackEffects:Squash id="squash"
        duration="200"
        direction="left"
        />-->
<!--       <viewStackEffects:FlipPapervision3D id="flipPapervision3DStackEffect"
         duration="600"  direction="up"
        popUp="true" modal="true"
        modalTransparencyBlur="0" modalTransparencyDuration="0"/>-->
	
	
	<mx:states>
		<mx:State name="Collapse">
			<mx:RemoveChild target="{txtSurvey}"/>
			<mx:RemoveChild target="{label1}"/>
			<mx:RemoveChild target="{dtExpire}"/>
			<mx:RemoveChild target="{acQuestionList}"/>
			<mx:RemoveChild target="{dtCreate}"/>
			<mx:RemoveChild target="{label2}"/>
			<mx:RemoveChild target="{lblUser}"/>
			<mx:SetProperty name="height"/>
		</mx:State>
	</mx:states>

<mx:Script>
	<![CDATA[
		import mx.collections.ArrayCollection;
		
		import component.SurveyUI.Render.*;
		import net.isurvey.event.*;
		import net.isurvey.model.*;
		import com.adobe.cairngorm.control.CairngormEventDispatcher;
		import com.adobe.cairngorm.control.CairngormEvent;
		import util.Localizator; 
		
		public static const SURVEY_NORMAL:int = 0;
		public static const SURVEY_UNPUBLISHED:int = 2;
		public static const SURVEY_EXPIRED:int = 1;
		public static const SURVEY_VOTED:int = 0;
		
		
		
		[Bindable] 
		private var localizator : Localizator = Localizator.getInstance();  
		private var md:SurveyModelLocator = SurveyModelLocator.getInstance();
		
		
		private var SurveyState:ArrayCollection = new ArrayCollection(
                [{img:"images/Survey_Edit.png", alpha:0.4},
                 {img:"images/Survey_Expired.jpg", alpha:0.3},
                 {img:"images/UnStartedSurvey.jpg", alpha:0.3}]);
                 
        private function setSurveyStateImage( s:int ):void{
        		survey_img.source = SurveyState[s].img;
        		survey_img.alpha  = SurveyState[s].alpha;       	
        }
            
		 
		public function init():void{
			acQuestionList.removeAllChildren();
			this.percentWidth = 100;
			this.percentHeight = 100;
		}
		
		public function renderSurveyHead( surveyhead:Object ):void{
			this.currentState = "Collapse";
			label = surveyhead.description;
		}
		
		public function retrieveSurveyBody():void{
			var evt:ManageSurveyEvent = new ManageSurveyEvent( ManageSurveyEvent.GET_SURVEY );
			evt.surveyrender = this;						
			CairngormEventDispatcher.getInstance().dispatchEvent( evt );
		}
		
		public function getSurveyVoteData():SurveyData{
			var surveydata:SurveyData = new SurveyData();
			surveydata.questionlist.removeAll();
			surveydata.description = txtSurvey.text;
			surveydata.expiredate = dtExpire.selectedDate;
			surveydata.createdate = dtCreate.selectedDate;
			surveydata.username = lblUser.text;
			
			
			for each( var questionitem:QuestionRender in acQuestionList.getChildren() ){
				surveydata.questionlist.addItem( questionitem.getQuestionVoteData() );
			}			
			return surveydata;
		}
		
		public function checkValidVote():Boolean{
			for each( var questionitem:QuestionRender in acQuestionList.getChildren() ){
				if ( ! questionitem.hasVote() ) return false;
			}			
			return true;
		}
		
		public function checkVoteAvailability():void{
			var currentdate:Date = new Date();
			if ( currentdate < dtCreate.selectedDate ){
				md.controlpanel.disableVote( true,"UnPublished Vote" );
				//NEED I18N
				setSurveyStateImage( SURVEY_UNPUBLISHED );
				return;
			}
			if ( currentdate >  dtExpire.selectedDate ){
				md.controlpanel.disableVote( true,localizator.getText('surveyr_module_cp_expired') );
				setSurveyStateImage( SURVEY_EXPIRED );
				return;
			}
			
			if ( !checkValidVote() ){
				md.controlpanel.disableVote( true,localizator.getText('surveyr_module_cp_notcomplete'));
				//need some PIC?
			}
			else md.controlpanel.disableVote(false);
		}
		
		public function renderSurvey( sdata:SurveyData,hasVoted:Boolean = false ):void{
			currentState = "";
			dtCreate.selectedDate = sdata.createdate;
			dtExpire.selectedDate = sdata.expiredate;
					
			txtSurvey.text = sdata.description;
			lblUser.text = localizator.getText('surveyr_module_fi_sponser')+sdata.username;
			acQuestionList.removeAllChildren();
			
			for each( var item:* in sdata.questionlist ){
	 			var qr:QuestionRender = new QuestionRender();
	 			qr.questiondata = new QuestionData();
	 			qr.questiondata.parseData(item);
	 			qr.label = item.description;
	 			qr.addEventListener("VOTE_EVENT",ValidateVotable);
	 			acQuestionList.addChild( qr );
	 		}
	 		
	 		if ( hasVoted ){
	 			setSurveyStateImage( SURVEY_VOTED );
	 			md.controlpanel.disableVote( true,"Already Voted" );
	 		}
	 		else checkVoteAvailability();
		}
		
		private function ValidateVotable( event:Event ):void{
			checkVoteAvailability();
		}

		
	]]>
</mx:Script>

	<mx:Label   text="{localizator.getText('manage_module_fi_releasetime')}"  x="26.5" bottom="10" id="label2"/>
	<mx:DateField id="dtCreate"  editable="false"  enabled="false" x="79" bottom="10"/>
	<mx:Label   text="{localizator.getText('manage_module_fi_deadline')}"  x="207.5" y="49" id="label1"/>
	<mx:DateField id="dtExpire"  editable="false" 
		enabled="false" x="270.5" y="47"/>
	<mx:Label id="lblUser" x="257" text="{localizator.getText('surveyr_module_fi_sponser')}" bottom="10"/>
	
	<mx:Accordion id="acQuestionList" x="36.5" y="78" width="80%" height="60%">
	<Render:QuestionRender/>
	<Render:QuestionRender/>
	</mx:Accordion>
	<mx:Label x="40.5" y="12" text="QueryDescritpion" width="320" height="29" id="txtSurvey"/>
	<mx:Image id="survey_img" x="0" y="0" width="100%" height="100%" 
		alpha="0.5"  scaleContent="true" maintainAspectRatio="false"/>
</mx:Canvas>
