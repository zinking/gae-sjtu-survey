<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="400" height="432" cornerRadius="30" borderStyle="solid"
	 initialize="init()">
	
	<mx:states>
		<mx:State name="edit">
			<mx:SetStyle target="{pbBox}" name="left" value="24"/>
			<mx:SetStyle target="{pbBox}" name="right" value="115.5"/>
			<mx:SetProperty target="{queryText}" name="x" value="24"/>
			<mx:SetProperty target="{queryText}" name="y" value="43"/>
			<mx:RemoveChild target="{label1}"/>
			<mx:RemoveChild target="{cdate}"/>
			<mx:SetStyle target="{edate}" name="textAlign" value="left"/>
			<mx:SetStyle target="{label2}" name="textAlign" value="left"/>
			
			<mx:RemoveChild target="{spacer2}"/>
			<mx:RemoveChild target="{spacer1}"/>
			<mx:SetProperty target="{queryText}" name="width" value="348.5"/>
			<mx:AddChild position="lastChild">
				<mx:Button x="380.5" y="88" label="确认问卷" width="83" height="29" id="ConfirmButton"
					 click="onConfirmQueryClick(event)" enabled="false"/>
			</mx:AddChild>
			<mx:SetProperty target="{queryText}" name="editable" value="true"/>
			<mx:SetProperty target="{edate}" name="enabled" value="true"/>
			<mx:SetProperty name="width" value="490"/>
			<mx:SetProperty name="height" value="576"/>
			<mx:AddChild position="lastChild">
				<mx:Button label="添加问题" width="83" height="29" id="AddProButton"
					 click="onAddProblemClick(event)" enabled="true" x="380.5" y="125"/>
			</mx:AddChild>
			<mx:SetStyle target="{pbBox}" name="bottom" value="138"/>
		</mx:State>
		<mx:State name="collapse">
			<mx:RemoveChild target="{label1}"/>
			<mx:RemoveChild target="{cdate}"/>
			<mx:RemoveChild target="{label2}"/>
			<mx:RemoveChild target="{edate}"/>
			<mx:RemoveChild target="{pbBox}"/>
			<mx:SetProperty target="{queryText}" name="y" value="7"/>
			
			<mx:SetProperty name="height" value="56"/>
			<mx:SetProperty target="{queryText}" name="x" value="24.5"/>
		</mx:State>
	</mx:states>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.events.FlexEvent;
			import net.isurvey.model.*;
			
			import mx.rpc.*;
			import mx.rpc.events.*;
			
		public var renderData:SurveyData;
		public var problemRendersHash:Object = new Object();
		
		//private var currentProblemRenderIndex:int = 0;
		
		private function init():void{
	 		if ( renderData == null ){//如果创建的时候没有数据，那么创建空数据，并不绘制
	 			 renderData = new SurveyData();
	 			 return;
	 		} 
	 		render( renderData );
	 		//this.currentState = 'edit';	 		
	 	}
		
		public function render(rData:SurveyData = null):void{
			//给定一个缺省参数，这样在缺省调用的时候，去RENDER成员的renderData
			if ( rData == null && renderData == null ) return;
			if ( rData == null ) rData = renderData;
			renderData = rData;
			creatorLabel.text = rData.username;
			cdate.selectedDate = rData.createdate;
			edate.selectedDate = rData.expiredate;
			queryText.text = rData.description;
			//TODO:poll count
			
			var i:int = 0;
			for each( var item:* in renderData.questionlist ){
	 			var pbr:ProblemRender = new ProblemRender();
	 			pbr.renderData = item as QuestionData;
	 			pbBox.addChild(pbr);
	 			problemRendersHash[i] = pbr;
	 			i++;	
	 		}
		}
		

		
		public function renderPollcount( pollCount:int):void{
			//创建一个个性化的数字图像显示当前
		}
		
		
		/////我是华丽的分割线，这里是编辑状态//////////////////////////////////////////////
		
		public function onAddProblemClick( event:MouseEvent ):void{
			if ( renderData == null ) renderData = new SurveyData();
			var pbr:ProblemRender = new ProblemRender();
			pbr.currentState = "edit";
			this.problemRendersHash[ renderData.questioncount ] = pbr;
			renderData.questioncount++;
			
			pbBox.addChild( pbr );
			//Alert.show("添加成功");		
		}
		
		
		//TODO:上下级RENDER之间的校验情况交流
		public function validate( event:Event ):void{
			if ( currentState != 'edit') return ;
			var qtVR:ValidationResultEvent = qtV.validate();
			var currentDate:Date = new Date();
			
			
			if ( edate.selectedDate >= currentDate &&
				 qtVR.type == ValidationResultEvent.VALID 
				 && renderData.questioncount >= 1 )
				 ConfirmButton.enabled = true;
			else
				ConfirmButton.enabled = false;
		}
		
		//获得编辑状态下所有当前问题和问卷的数据，MODEL层面
		public function retrieveRenderData():void{
			renderData.createdate = new Date();
			renderData.description= queryText.text;
			renderData.expiredate = edate.selectedDate;
			renderData.questioncount = 0;
			renderData.username = "wang";
			//清空ArrayCollection
			renderData.questionlist.removeAll();
			for each ( var item:ProblemRender in this.problemRendersHash ){
				renderData.questionlist.addItem( item.renderData );
			}			
		}
		
		public function onConfirmQueryClick( event:MouseEvent ):void{
			retrieveRenderData();//TODO:如果前次已经取过了呢？
			var token:AsyncToken=queryService.AddQuery( renderData );
			token.addResponder(new AsyncResponder(AfterSubmit,falutHandler));
		}
		
		////////////////我是华丽的分割线，这里是RemoteObject操作部分/////////////////
		private function AfterSubmit(result:Object, token:Object=null):void{
			var evt:ResultEvent=result as ResultEvent;
			var r:Boolean = evt.result.AddResult;
			if ( r ) Alert.show("提交问卷成功");
			else Alert.show("问卷添加失败");
		}
		
		private function falutHandler(error:Object, token:Object=null):void{
			
			var evt:FaultEvent=error as FaultEvent;
			trace(evt.fault.faultDetail);
			trace(evt.fault.faultString);
		}
		
		
			
		]]>
	</mx:Script>
	
	<mx:RemoteObject id="queryService" destination="qSurvey" showBusyCursor="true"/>
	<mx:Spacer width="60" id="spacer2"/>
	<mx:Label   text="创建日期：" id="label1" x="25.5" y="12"/>
	<mx:DateField id="cdate"  editable="false"  enabled="false" x="78" y="10"/>
	<mx:Spacer width="40" id="spacer1"/>
	<mx:Label   text="截止日期：" id="label2" x="219.5" y="12"/>
	<mx:DateField id="edate"  editable="false" change="validate(event)" enabled="false" x="282.5" y="10"/>

	<mx:TextArea id="queryText" x="25.5" y="41" text="为您着想，iQuery" 
		width="347" height="39" textAlign="center" borderStyle="solid" cornerRadius="5" editable="false"/>
	<mx:VBox id="pbBox" bottom="12" left="25.5" right="25.5" top="88">
		<mx:Label id="creatorLabel" text="发起人：" width="133" height="20" 
				color="#1AA8C6" fontFamily="Arial"/>
	</mx:VBox>
	
	<!--校验器区
	-->
	<mx:StringValidator id="qtV" source="{queryText}" property="text" 
        tooShortError="输入内容太短。" 
        tooLongError="输入内容太长。" 
        minLength="4" maxLength="200"  
       />  
<!--    <mx:DateValidator  source="{edate}" property="selectedDate"
    	 />-->
	
</mx:Canvas>
